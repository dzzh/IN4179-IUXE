<button onclick="Hello()">Hello</button>

<object id="AgentControl" width="0" height="0"
  classid="CLSID:D45FD31B-5C6E-11D1-9EC1-00C04FD7081F"
  codebase="#VERSION=2,0,0,0">
</object>

<object id="L&HTruVoice" width="0" height="0"
  classid="CLSID:B8F2846E-CE36-11D0-AC83-00C04FD97575"
  codebase="#VERSION=6,0,0,0">
</object>

<script language="JavaScript" type="text/javascript" type="text/javascript">
<!--//
/*
'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
'_/ Portions generated by MASH - Microsoft Agent Scripting Helper, version 7.5
'_/ by BellCraft Technologies, http://www.bellcraft.com/mash
'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
*/

// * Character Objects
var Char;

// * Variables
var UsedChars;
var CharID;
var CharACS;
var CharLoaded;
var LoadReq;
var HideReq;

// * Initialize
UsedChars = "Char";

// * Char
CharID = "Char";
CharACS = "";
CharLoaded = false;


Window_OnLoad();

function Window_OnLoad() {
    // Purpose:  Runs automatically when page is loaded

    // * INSERT ANY NON-AGENT RELATED SCRIPTING HERE

    AgentControl.Connected = true;

    CharLoaded = LoadLocalChar(CharID, CharACS);

    if (!CharLoaded) {
        // Attempt to load default character
        CharLoaded = LoadLocalChar(CharID, "");
    }

    if (CharLoaded) {
        SetCharObj();
    }
    CheckLoadStatus();
}

function LoadLocalChar(CharID, CharACS) {
    // Purpose:  Attempts to load the specified character
    // Returns:  true if successful, false if not

    AgentControl.RaiseRequestErrors = false;
    if (CharACS == "") {

        LoadReq = AgentControl.Characters.Load(CharID);
    }
    else {
        LoadReq = AgentControl.Characters.Load(CharID, CharACS);
    }
    AgentControl.RaiseRequestErrors = true;

    if (LoadReq.Status != 1) {
        return(true);
    }
    return(false);
}

function SetCharObj() {
    // Purpose:  Sets the character reference and TTS Language ID

    Char = AgentControl.Characters.Character(CharID);
    Char.LanguageID = 0x409;
}

function CheckLoadStatus() {
    // Purpose:  Determines if required characters have been loaded.
    //           If not, issue request to load next character
    //           else run the AgentIntro routine

    if (!CharLoaded) {
        LoadError();
        return(false);
    }

    window.status = "";
    AgentIntro();
    return(true);
}

function LoadError() {
    var strMsg;
    window.status = "";
    strMsg = "Error Loading Character: " + CharID + "\n";
    strMsg = strMsg + "This Microsoft Agent Script requires the character(s):\n";
    strMsg = strMsg + UsedChars;
    alert(strMsg);
}
function GetDay() {
    // Purpose:  Returns current weekday name
    var aDay = new Array("Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday");
    var d;
    d = new Date();
    return(aDay[d.getDay()]);
}

function GetDate() {
    // Purpose:  Returns current long date
    var aMon = new Array("January","February","March","April","May","June","July","August","September","October","November","December");
    var d = new Date();
    var sDay = d.getDate().toString();
    var sYear = d.getYear();

    if (sYear < 100)
        sYear += 1900;

    if ((sDay == "11") || (sDay == "12") || (sDay == "13"))
        sDay += "th";
    else {
        switch(sDay.charAt(sDay.length - 1)) {
        case "1": sDay += "st"; break;
        case "2": sDay += "nd"; break;
        case "3": sDay += "rd"; break;
        default : sDay += "th"; break;
        }
    }

    return(aMon[d.getMonth()] + " " + sDay + ", " + sYear);
}

function GetTime() {
    // Purpose:  Returns current time
    var d = new Date();
    var h = d.getHours();
    var m = d.getMinutes().toString();
    var c = (h < 12) ? " AM" : " PM";

    h = (h == 0) ? 12 : h;
    h = (h > 12) ? h - 12 : h;

    if (m.length == 1)
        m = "0" + m;

    return(h + ":" + m + c);
}

function GetTimeOfDay() {
    // Purpose:  Returns current time of day
    var d = new Date();
    var h = d.getHours();

    if (h < 12)
        return("Morning");
    else if (h < 17)
        return("Afternoon");
    else
        return("Evening");
}

function InitAgentCommands() {
    // Purpose:  Initialize the Commands menu

    Char.Commands.RemoveAll();
    Char.Commands.Caption = "MASH Menu";
    Char.Commands.Add("ACO", "Advanced Character Options", "Advanced Character Options");
}

function AgentIntro() {
    InitAgentCommands();

    // *** BEGIN MASH USER SCRIPT ***

    Char.TTSModeID = "\{CA141FD0-AC7F-11D1-97A3-006008273000\}";
    Char.Show();
    Char.Speak("Good " + GetTimeOfDay() + "!");
    Char.Speak("It is " + GetTime() + ".");

    // *** END MASH USER SCRIPT ***
}

function Hello() {
	Char.Speak("Hello there.");
}
//-->
</script>

<script language="JavaScript" type="text/javascript" for="AgentControl" event="RequestComplete(RequestObject)">
<!--//
    // Purpose:  Take action on completion or failure of requests

//-->
</script>

<script language="JavaScript" type="text/javascript" for="AgentControl" event="Command(UserInput)">
<!--//
    // Purpose:  Determine Command that was selected either by menu or voice
    //           and run the applicable Command Script
    var BadConfidence;
    BadConfidence = 10;

    if (UserInput.Confidence <= -40)
    {
        // Bad Recognition
    }
    else if ((UserInput.Alt1Name != "") && (Math.abs(Math.abs(UserInput.Alt1Confidence) - Math.abs(UserInput.Confidence)) < BadConfidence))
    {
        // Bad Confidence - too close to another command
    }
    else if ((UserInput.Alt2Name != "") && (Math.abs(Math.abs(UserInput.Alt1Confidence) - Math.abs(UserInput.Confidence)) < BadConfidence))
    {
        // Bad Confidence - too close to another command
    }
    else
    {
        // High Confidence
        // *** BEGIN MASH USER COMMANDS ***
        switch(UserInput.Name) {
        case "ACO" :
            AgentControl.PropertySheet.Visible = true;
            break;
        }
        // *** END MASH USER COMMANDS ***
    }
//-->
</script>


<script language="JavaScript" type="text/javascript" for="AgentControl" event="Bookmark(BookmarkID)">
<!--//
//-->
</script>

<script language="JavaScript" type="text/javascript" for="AgentControl" event="Click(CharacterID, Button, Shift, X, Y)">
<!--
    // Insert Click Event Code Here
-->
</script>

<script language="JavaScript" type="text/javascript" for="AgentControl" event="DblClick(CharacterID, Button, Shift, X, Y)">
<!--
    // Purpose:  Stop and Hide all characters on double-click

    Char.StopAll();
    if (!Char.HasOtherClients) {
        if (Char.Visible) {
            HideReq = Char.Hide();
        }
        else {
            AgentControl.Characters.Character.Unload(CharID);
        }
    }
//_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
//-->
</script>

